/****** Object:  Database [TestResearchDB]    Script Date: 5/15/2024 7:50:41 PM ******/
CREATE DATABASE [TestResearchDB]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'TestResearchDB', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\TestResearchDB.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'TestResearchDB_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\TestResearchDB_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [TestResearchDB].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO

ALTER DATABASE [TestResearchDB] SET ANSI_NULL_DEFAULT OFF 
GO

ALTER DATABASE [TestResearchDB] SET ANSI_NULLS OFF 
GO

ALTER DATABASE [TestResearchDB] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [TestResearchDB] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [TestResearchDB] SET ARITHABORT OFF 
GO

ALTER DATABASE [TestResearchDB] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [TestResearchDB] SET AUTO_SHRINK OFF 
GO

ALTER DATABASE [TestResearchDB] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [TestResearchDB] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO

ALTER DATABASE [TestResearchDB] SET CURSOR_DEFAULT  GLOBAL 
GO

ALTER DATABASE [TestResearchDB] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [TestResearchDB] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [TestResearchDB] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [TestResearchDB] SET RECURSIVE_TRIGGERS OFF 
GO

ALTER DATABASE [TestResearchDB] SET  DISABLE_BROKER 
GO

ALTER DATABASE [TestResearchDB] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [TestResearchDB] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [TestResearchDB] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [TestResearchDB] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [TestResearchDB] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [TestResearchDB] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [TestResearchDB] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [TestResearchDB] SET RECOVERY SIMPLE 
GO

ALTER DATABASE [TestResearchDB] SET  MULTI_USER 
GO

ALTER DATABASE [TestResearchDB] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [TestResearchDB] SET DB_CHAINING OFF 
GO

ALTER DATABASE [TestResearchDB] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [TestResearchDB] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [TestResearchDB] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [TestResearchDB] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO

ALTER DATABASE [TestResearchDB] SET QUERY_STORE = ON
GO

ALTER DATABASE [TestResearchDB] SET QUERY_STORE (OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
GO

ALTER DATABASE [TestResearchDB] SET  READ_WRITE 
GO



/********TABLE CREATION START**********/

USE [TestResearchDB]
GO

/****** Object:  Table [dbo].[USERS]    Script Date: 5/15/2024 7:52:16 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[USERS](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[USER_NAME] [nvarchar](100) NOT NULL,
	[PASSWORD] [nvarchar](100) NOT NULL,
	[ENC_PASSWORD] [nvarchar](max) NOT NULL,
	[USER_ADDRESS] [nvarchar](max) NULL,
	[UPLOADED_IMG] [nvarchar](max) NULL,
	[FULL_NAME] [nvarchar](200) NULL,
 CONSTRAINT [PK_USER] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO


USE [TestResearchDB]
GO

/****** Object:  Table [dbo].[SURVEY_FORM_HEAD]    Script Date: 5/15/2024 7:52:36 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[SURVEY_FORM_HEAD](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[OWNER_NAME] [nvarchar](max) NOT NULL,
	[SHOP_NAME] [nvarchar](max) NOT NULL,
	[OWNER_EMAIL] [nvarchar](200) NOT NULL,
	[ADDRESS] [nvarchar](max) NULL,
	[PHONE_NUMBER] [nvarchar](100) NULL,
	[SURVEY_USER_ID] [bigint] NOT NULL,
	[SURVEY_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_SURVEY_FORM] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[SURVEY_FORM_HEAD]  WITH CHECK ADD  CONSTRAINT [FK_SURVEY_FORM_HEAD_USERS] FOREIGN KEY([SURVEY_USER_ID])
REFERENCES [dbo].[USERS] ([ID])
GO

ALTER TABLE [dbo].[SURVEY_FORM_HEAD] CHECK CONSTRAINT [FK_SURVEY_FORM_HEAD_USERS]
GO


USE [TestResearchDB]
GO

/****** Object:  Table [dbo].[SURVEY_FORM_DETAILS]    Script Date: 5/15/2024 7:53:00 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[SURVEY_FORM_DETAILS](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[SURVEY_FORM_HEAD_ID] [bigint] NOT NULL,
	[DEVICE_NAME] [nvarchar](100) NULL,
	[DEVICE_CODE] [nvarchar](max) NULL,
	[CREATED_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_SURVEY_FORM_DETAILS] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[SURVEY_FORM_DETAILS]  WITH CHECK ADD  CONSTRAINT [FK_SURVEY_FORM_DETAILS_SURVEY_FORM_HEAD] FOREIGN KEY([SURVEY_FORM_HEAD_ID])
REFERENCES [dbo].[SURVEY_FORM_HEAD] ([ID])
GO

ALTER TABLE [dbo].[SURVEY_FORM_DETAILS] CHECK CONSTRAINT [FK_SURVEY_FORM_DETAILS_SURVEY_FORM_HEAD]
GO


USE [TestResearchDB]
GO

/****** Object:  Table [dbo].[AspNetUsers]    Script Date: 5/22/2024 7:58:46 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[AspNetUsers](
	[Id] [nvarchar](max) NOT NULL,
	[UserName] [nvarchar](max) NULL,
	[Email] [nvarchar](max) NOT NULL,
	[EmailConfirmed] [bit] NULL,
	[PasswordHash] [nvarchar](max) NULL,
	[SecurityStamp] [nvarchar](max) NULL,
	[PhoneNumber] [nvarchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO


USE [TestResearchDB]
GO

/****** Object:  Table [dbo].[AspNetRoles]    Script Date: 5/22/2024 7:59:15 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[AspNetRoles](
	[Id] [int] NOT NULL,
	[Name] [nvarchar](max) NULL,
 CONSTRAINT [PK_AspNetRoles] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO


USE [TestResearchDB]
GO

/****** Object:  Table [dbo].[AspNetUserRoles]    Script Date: 5/22/2024 7:59:34 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[AspNetUserRoles](
	[UserId] [nvarchar](max) NOT NULL,
	[RoleId] [int] NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[AspNetUserRoles]  WITH CHECK ADD  CONSTRAINT [FK_AspNetUserRoles_AspNetRoles] FOREIGN KEY([RoleId])
REFERENCES [dbo].[AspNetRoles] ([Id])
GO

ALTER TABLE [dbo].[AspNetUserRoles] CHECK CONSTRAINT [FK_AspNetUserRoles_AspNetRoles]
GO










/***********CREATE STORED PROCEDURE START*************/


USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[INSERT_USERS_DETAILS]    Script Date: 5/22/2024 8:00:11 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[INSERT_USERS_DETAILS]
@USER_NAME NVARCHAR(100),
@PASSWORD NVARCHAR(50),
@USER_ADDRESS NVARCHAR(MAX),
@IMAGE_PATH NVARCHAR(MAX) = NULL,
@FULL_NAME NVARCHAR(100),
@ENC_PWD NVARCHAR(MAX),
@STATUS INT OUT,
@MESSAGE NVARCHAR(200) OUT
AS
BEGIN
	BEGIN TRY
		IF NOT EXISTS(SELECT 1 FROM dbo.USERS WHERE USER_NAME = @USER_NAME)
			BEGIN
				BEGIN TRANSACTION USERTRANSACTION
				DECLARE @USER_GUID NVARCHAR(MAX) = NEWID()
				INSERT INTO dbo.USERS VALUES(@USER_NAME,@PASSWORD,@ENC_PWD,@USER_ADDRESS,@IMAGE_PATH,@FULL_NAME,@USER_GUID)
				INSERT INTO AspNetUsers(Id, UserName, Email, PasswordHash, SecurityStamp, PhoneNumber) VALUES
				(@USER_GUID, @USER_NAME, @USER_NAME,@ENC_PWD, '', '')

				SET @STATUS = 1
				SET @MESSAGE = 'SUCCESSFULLY INSERTED'

				COMMIT TRANSACTION USERTRANSACTION
			END
		ELSE
			BEGIN
				SET @STATUS = 0
				SET @MESSAGE = 'DUPLICATE USERNAME'	
			END
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0
		BEGIN
			ROLLBACK TRANSACTION USERTRANSACTION
			SET @STATUS = 0
		END
		
	END CATCH
END

GO





USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[CHECK_LOGIN]    Script Date: 5/23/2024 7:41:21 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[CHECK_LOGIN]
@USERNAME NVARCHAR(MAX),
@PASSWORD NVARCHAR(MAX),
@HASHPASSWORD NVARCHAR(MAX)

AS
BEGIN
	--SELECT ID FROM dbo.USERS WHERE USER_NAME = @USERNAME AND PASSWORD = @PASSWORD AND ENC_PASSWORD = @HASHPASSWORD

	SELECT U.ID, U.USER_NAME, U.USER_GUID, STRING_AGG(R.Name,',') AS ROLES, U.FULL_NAME
	FROM dbo.USERS AS U LEFT JOIN dbo.AspNetUserRoles AS UR ON U.USER_GUID = UR.UserId 
	LEFT JOIN dbo.AspNetRoles R ON UR.RoleId = R.Id WHERE U.USER_NAME = @USERNAME AND U.PASSWORD = @PASSWORD
	AND U.ENC_PASSWORD = @HASHPASSWORD GROUP BY U.USER_NAME, U.USER_GUID, U.ID, U.FULL_NAME
END
GO



USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[GET_USER_DATA]    Script Date: 5/15/2024 7:54:29 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[GET_USER_DATA]
@USER_ID INT
AS
BEGIN
	IF(@USER_ID > 0)
		BEGIN
			SELECT USER_NAME, PASSWORD, USER_ADDRESS, UPLOADED_IMG, FULL_NAME FROM dbo.USERS WHERE ID=@USER_ID
		END
	END
GO


USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[UPDATE_USER_DETAILS]    Script Date: 5/15/2024 7:54:55 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[UPDATE_USER_DETAILS]
@USER_ID INT,
@USER_NAME NVARCHAR(100),
@PASSWORD NVARCHAR(50),
@USER_ADDRESS NVARCHAR(MAX),
@FULL_NAME NVARCHAR(100),
@ENC_PWD NVARCHAR(MAX),
@IMAGE_PATH NVARCHAR(MAX),
@STATUS INT OUT,
@MESSAGE NVARCHAR(200) OUT
AS
BEGIN
	IF EXISTS(SELECT 1 FROM dbo.USERS WHERE ID = @USER_ID)
		BEGIN
			UPDATE dbo.USERS SET USER_NAME = @USER_NAME, PASSWORD = @PASSWORD, ENC_PASSWORD = @ENC_PWD, USER_ADDRESS = @USER_ADDRESS,
			UPLOADED_IMG = @IMAGE_PATH WHERE ID=@USER_ID
			SET @STATUS = 1
			SET @MESSAGE = 'SUCCESSFULLY UPDATED'
		END
	ELSE
		BEGIN
			SET @STATUS = 0
			SET @MESSAGE = 'FAILED'
		END
END
GO


USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[SAVE_SURVEY_HEAD_DETAILS]    Script Date: 5/15/2024 7:55:12 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SAVE_SURVEY_HEAD_DETAILS]
@JSON_DATA NVARCHAR(MAX),
@STATUS INT OUT,
@MESSAGE NVARCHAR(200) OUT
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION SURVEYTRANSACTION;
		--INSERTING INTO THE HEAD TABLE FIRST
		INSERT INTO dbo.SURVEY_FORM_HEAD(OWNER_NAME, SHOP_NAME, OWNER_EMAIL, ADDRESS, PHONE_NUMBER, SURVEY_USER_ID, SURVEY_DATE)
		SELECT OWNER_NAME, SHOP_NAME, OWNER_EMAIL, ADDRESS, PHONE_NUMBER, SURVEY_USER_ID, GETDATE()
		FROM OPENJSON(@JSON_DATA)
		WITH(
			owner_name NVARCHAR(MAX),
			shop_name NVARCHAR(MAX),
			owner_email NVARCHAR(MAX),
			address NVARCHAR(MAX),
			phone_number NVARCHAR(MAX),
			survey_user_id INT,
			survey_date NVARCHAR(MAX)
		);

		--Get the id of inserted head table
		DECLARE @HEAD_ID BIGINT
		SET @HEAD_ID = SCOPE_IDENTITY();

		--INSERTING DATA INTO DETAILS TABLE
		INSERT INTO dbo.SURVEY_FORM_DETAILS(SURVEY_FORM_HEAD_ID, DEVICE_NAME, DEVICE_CODE, CREATED_DATE) 
		SELECT @HEAD_ID, DEVICE_NAME, DEVICE_CODE, GETDATE()
		FROM OPENJSON(@JSON_DATA, '$.survey_details')
		WITH(
			device_name NVARCHAR(MAX),
			device_code NVARCHAR(MAX)
		);
		COMMIT TRANSACTION SURVEYTRANSACTION;
		SET @STATUS = 1
		SET @MESSAGE = 'SUCCESSFULLY INSERTED'
	END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
		BEGIN
			ROLLBACK TRANSACTION SURVEYTRANSACTION;
			SET @STATUS = 0
			SET @MESSAGE = 'SOMETHING WENT WRONG'
		END
	END CATCH

END
GO



USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[GET_SURVEY_FORM_LIST]    Script Date: 5/16/2024 7:59:17 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GET_SURVEY_FORM_LIST]
@USER_ID INT,
@MESSAGE NVARCHAR(MAX) OUTPUT
AS
BEGIN
	IF EXISTS(SELECT 1 FROM SURVEY_FORM_HEAD WHERE SURVEY_USER_ID = @USER_ID)
		BEGIN
			SELECT SH.ID, SH.OWNER_NAME, SH.SHOP_NAME, SH.OWNER_EMAIL, SH.ADDRESS, SH.PHONE_NUMBER,SH.SURVEY_DATE, STRING_AGG(SD.DEVICE_NAME, ',') AS DEVICES
			FROM SURVEY_FORM_HEAD AS SH LEFT JOIN SURVEY_FORM_DETAILS AS SD ON SH.ID = SD.SURVEY_FORM_HEAD_ID
			WHERE SH.SURVEY_USER_ID = @USER_ID--@USER_ID
			GROUP BY SH.ID, SH.OWNER_NAME, SH.SHOP_NAME, SH.OWNER_EMAIL, SH.ADDRESS, SH.PHONE_NUMBER,SH.SURVEY_DATE

			SET @MESSAGE = ''
		END
	ELSE
		BEGIN
		SET @MESSAGE = 'There is no forms submitted to show'
		END
END
GO



USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[GET_SURVEY_FORM_FOR_EDIT]    Script Date: 5/16/2024 7:59:51 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GET_SURVEY_FORM_FOR_EDIT]
@SURVEY_FORM_ID INT,
@MESSAGE NVARCHAR(MAX) OUTPUT
AS 
BEGIN
	IF EXISTS(SELECT 1 FROM SURVEY_FORM_HEAD WHERE ID=@SURVEY_FORM_ID)
		BEGIN
			SELECT SH.ID, SH.OWNER_NAME, SH.SHOP_NAME, SH.OWNER_EMAIL, SH.ADDRESS,SH.PHONE_NUMBER, SH.SURVEY_DATE
			FROM SURVEY_FORM_HEAD SH WHERE ID=@SURVEY_FORM_ID
			SELECT SD.DEVICE_NAME, SD.DEVICE_CODE FROM SURVEY_FORM_DETAILS SD WHERE SURVEY_FORM_HEAD_ID = @SURVEY_FORM_ID
		END
	ELSE
		BEGIN
			SET @MESSAGE = 'No Data Found'
		END
END
GO


USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[UPDATE_FORM_HEAD]    Script Date: 5/16/2024 8:00:25 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UPDATE_FORM_HEAD]
@FORM_ID INT,
@OWNER_NAME NVARCHAR(MAX),
@SHOP_NAME NVARCHAR(MAX),
@OWNER_EMAIL NVARCHAR(MAX),
@ADDRESS NVARCHAR(MAX),
@PHONE_NUMBER NVARCHAR(MAX),
@MESSAGE NVARCHAR(MAX) OUTPUT

AS
BEGIN
	IF EXISTS(SELECT 1 FROM SURVEY_FORM_HEAD WHERE ID=@FORM_ID)
		BEGIN
			UPDATE SURVEY_FORM_HEAD SET OWNER_NAME = @OWNER_NAME, SHOP_NAME = @SHOP_NAME, OWNER_EMAIL = @OWNER_EMAIL,
			ADDRESS = @ADDRESS, PHONE_NUMBER = @PHONE_NUMBER WHERE ID=@FORM_ID

			DELETE FROM SURVEY_FORM_DETAILS WHERE SURVEY_FORM_HEAD_ID = @FORM_ID

			SET @MESSAGE = 'SUCCESSFULLY UPDATED'
		END
	ELSE
		BEGIN
		SET @MESSAGE = 'COULD NOT FOUND RECORD WITH THE FORM ID'
		END
END
GO


USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[UPDATE_FORMS_DETAILS]    Script Date: 5/16/2024 8:01:02 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[UPDATE_FORMS_DETAILS]
@FORM_ID INT,
@DEVICE_NAME NVARCHAR(MAX),
@DEVICE_CODE NVARCHAR(MAX)

AS
BEGIN
	INSERT INTO SURVEY_FORM_DETAILS(SURVEY_FORM_HEAD_ID, DEVICE_NAME, DEVICE_CODE, CREATED_DATE) VALUES(@FORM_ID, @DEVICE_NAME,
	@DEVICE_CODE, GETDATE())
END
GO



USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[GET_USERS_LIST]    Script Date: 5/22/2024 8:01:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GET_USERS_LIST]
AS
BEGIN
	SELECT Id, UserName FROM dbo.AspNetUsers 
END
GO


USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[GET_ROLE_CHECKBOX]    Script Date: 5/22/2024 8:02:09 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GET_ROLE_CHECKBOX]
@USER_ID NVARCHAR(MAX)

AS
BEGIN
	SELECT * FROM dbo.AspNetRoles
	SELECT ANUR.RoleId as Id FROM  AspNetUserRoles ANUR WHERE ANUR.UserId =@USER_ID
END
GO


USE [TestResearchDB]
GO

/****** Object:  StoredProcedure [dbo].[SET_ROLES_AGAINST_USER]    Script Date: 5/23/2024 7:43:05 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SET_ROLES_AGAINST_USER]
@JSON_VALUE NVARCHAR(MAX),
@STATUS INT OUTPUT,
@MESSAGE NVARCHAR(MAX) OUTPUT
AS
BEGIN
	

	BEGIN TRY
		BEGIN TRANSACTION JSONTRAN
		DECLARE @ROLES_JSON NVARCHAR(MAX);
		DECLARE @USER_ID NVARCHAR(MAX);
		--OPENJSON function converts json data into table type row set
		SET @ROLES_JSON = (SELECT [value] FROM OPENJSON(@JSON_VALUE) WHERE [key] = 'Roles');
		SELECT @USER_ID = JSON_VALUE(@JSON_VALUE, '$.User_id');

		DELETE FROM dbo.AspNetUserRoles WHERE UserId = @USER_ID
		IF @ROLES_JSON IS NOT NULL AND @ROLES_JSON <> '[]'
		BEGIN
			INSERT INTO dbo.AspNetUserRoles (UserId, RoleId) SELECT @USER_ID, CAST(value AS int) AS ROLE_ID FROM OPENJSON(@ROLES_JSON)
		END
		COMMIT TRANSACTION JSONTRAN
		SET @STATUS = 1;
		SET @MESSAGE = 'ROLES MAPPED SUCCESSFULLY!';
	END TRY

	BEGIN CATCH
		IF @@TRANCOUNT > 0
		BEGIN
			ROLLBACK TRANSACTION JSONTRAN

			SET @STATUS = 0;
			SET @MESSAGE = 'SOMETHINGH WENT WRONG!';
		END
	END CATCH


END
GO









